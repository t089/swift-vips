//
//  Colour.generated.swift
//
//  Generated by VIPS Code Generator
//  DO NOT EDIT - This file is automatically generated
//

import Cvips

extension VIPSImage {

    /// false-color an image
    public func falsecolour(nickname: String? = nil, description: String? = nil) throws -> VIPSImage {
        return try VIPSImage(self) { out in
            var opt = VIPSOption()

            opt.set("in", value: self.image)
            if let nickname = nickname {
                opt.set("nickname", value: nickname)
            }
            if let description = description {
                opt.set("description", value: description)
            }
            opt.set("out", value: &out)

            try VIPSImage.call("falsecolour", options: &opt)
        }
    }

    /// convert to a new colorspace
    public func colourspace(nickname: String? = nil, description: String? = nil, source-space: VipsInterpretation? = nil, space: VipsInterpretation) throws -> VIPSImage {
        return try VIPSImage(self) { out in
            var opt = VIPSOption()

            opt.set("in", value: self.image)
            if let nickname = nickname {
                opt.set("nickname", value: nickname)
            }
            if let description = description {
                opt.set("description", value: description)
            }
            if let source-space = source-space {
                opt.set("source-space", value: source-space)
            }
            opt.set("space", value: space)
            opt.set("out", value: &out)

            try VIPSImage.call("colourspace", options: &opt)
        }
    }

    /// convert an sRGB image to scRGB
    public func sRGB2scRGB(nickname: String? = nil, description: String? = nil) throws -> VIPSImage {
        return try VIPSImage(self) { out in
            var opt = VIPSOption()

            opt.set("in", value: self.image)
            if let nickname = nickname {
                opt.set("nickname", value: nickname)
            }
            if let description = description {
                opt.set("description", value: description)
            }
            opt.set("out", value: &out)

            try VIPSImage.call("sRGB2scRGB", options: &opt)
        }
    }

    /// transform scRGB to XYZ
    public func scRGB2XYZ(nickname: String? = nil, description: String? = nil) throws -> VIPSImage {
        return try VIPSImage(self) { out in
            var opt = VIPSOption()

            opt.set("in", value: self.image)
            if let nickname = nickname {
                opt.set("nickname", value: nickname)
            }
            if let description = description {
                opt.set("description", value: description)
            }
            opt.set("out", value: &out)

            try VIPSImage.call("scRGB2XYZ", options: &opt)
        }
    }

    /// convert scRGB to BW
    public func scRGB2BW(nickname: String? = nil, description: String? = nil, depth: Int? = nil) throws -> VIPSImage {
        return try VIPSImage(self) { out in
            var opt = VIPSOption()

            opt.set("in", value: self.image)
            if let nickname = nickname {
                opt.set("nickname", value: nickname)
            }
            if let description = description {
                opt.set("description", value: description)
            }
            if let depth = depth {
                opt.set("depth", value: depth)
            }
            opt.set("out", value: &out)

            try VIPSImage.call("scRGB2BW", options: &opt)
        }
    }

    /// transform XYZ to scRGB
    public func XYZ2scRGB(nickname: String? = nil, description: String? = nil) throws -> VIPSImage {
        return try VIPSImage(self) { out in
            var opt = VIPSOption()

            opt.set("in", value: self.image)
            if let nickname = nickname {
                opt.set("nickname", value: nickname)
            }
            if let description = description {
                opt.set("description", value: description)
            }
            opt.set("out", value: &out)

            try VIPSImage.call("XYZ2scRGB", options: &opt)
        }
    }

    /// convert an scRGB image to sRGB
    public func scRGB2sRGB(nickname: String? = nil, description: String? = nil, depth: Int? = nil) throws -> VIPSImage {
        return try VIPSImage(self) { out in
            var opt = VIPSOption()

            opt.set("in", value: self.image)
            if let nickname = nickname {
                opt.set("nickname", value: nickname)
            }
            if let description = description {
                opt.set("description", value: description)
            }
            if let depth = depth {
                opt.set("depth", value: depth)
            }
            opt.set("out", value: &out)

            try VIPSImage.call("scRGB2sRGB", options: &opt)
        }
    }

    /// transform CMYK to XYZ
    public func CMYK2XYZ(nickname: String? = nil, description: String? = nil) throws -> VIPSImage {
        return try VIPSImage(self) { out in
            var opt = VIPSOption()

            opt.set("in", value: self.image)
            if let nickname = nickname {
                opt.set("nickname", value: nickname)
            }
            if let description = description {
                opt.set("description", value: description)
            }
            opt.set("out", value: &out)

            try VIPSImage.call("CMYK2XYZ", options: &opt)
        }
    }

    /// transform XYZ to CMYK
    public func XYZ2CMYK(nickname: String? = nil, description: String? = nil) throws -> VIPSImage {
        return try VIPSImage(self) { out in
            var opt = VIPSOption()

            opt.set("in", value: self.image)
            if let nickname = nickname {
                opt.set("nickname", value: nickname)
            }
            if let description = description {
                opt.set("description", value: description)
            }
            opt.set("out", value: &out)

            try VIPSImage.call("XYZ2CMYK", options: &opt)
        }
    }

}

//
//  Create.generated.swift
//
//  Generated by VIPS Code Generator
//  DO NOT EDIT - This file is automatically generated
//

import Cvips

extension VIPSImage {

    /// make a black image
    public static func black(nickname: String? = nil, description: String? = nil, width: Int, height: Int, bands: Int? = nil) throws -> VIPSImage {
        return try VIPSImage(nil) { out in
            var opt = VIPSOption()

            if let nickname = nickname {
                opt.set("nickname", value: nickname)
            }
            if let description = description {
                opt.set("description", value: description)
            }
            opt.set("width", value: width)
            opt.set("height", value: height)
            if let bands = bands {
                opt.set("bands", value: bands)
            }
            opt.set("out", value: &out)

            try VIPSImage.call("black", options: &opt)
        }
    }

    /// make a gaussnoise image
    public static func gaussnoise(nickname: String? = nil, description: String? = nil, width: Int, height: Int, sigma: Double? = nil, mean: Double? = nil, seed: Int? = nil) throws -> VIPSImage {
        return try VIPSImage(nil) { out in
            var opt = VIPSOption()

            if let nickname = nickname {
                opt.set("nickname", value: nickname)
            }
            if let description = description {
                opt.set("description", value: description)
            }
            opt.set("width", value: width)
            opt.set("height", value: height)
            if let sigma = sigma {
                opt.set("sigma", value: sigma)
            }
            if let mean = mean {
                opt.set("mean", value: mean)
            }
            if let seed = seed {
                opt.set("seed", value: seed)
            }
            opt.set("out", value: &out)

            try VIPSImage.call("gaussnoise", options: &opt)
        }
    }

    /// make an image where pixel values are coordinates
    public static func xyz(nickname: String? = nil, description: String? = nil, width: Int, height: Int, csize: Int? = nil, dsize: Int? = nil, esize: Int? = nil) throws -> VIPSImage {
        return try VIPSImage(nil) { out in
            var opt = VIPSOption()

            if let nickname = nickname {
                opt.set("nickname", value: nickname)
            }
            if let description = description {
                opt.set("description", value: description)
            }
            opt.set("width", value: width)
            opt.set("height", value: height)
            if let csize = csize {
                opt.set("csize", value: csize)
            }
            if let dsize = dsize {
                opt.set("dsize", value: dsize)
            }
            if let esize = esize {
                opt.set("esize", value: esize)
            }
            opt.set("out", value: &out)

            try VIPSImage.call("xyz", options: &opt)
        }
    }

    /// make a gaussian image
    public static func gaussmat(nickname: String? = nil, sigma: Double, description: String? = nil, min-ampl: Double, separable: Bool? = nil, precision: VipsPrecision? = nil) throws -> VIPSImage {
        return try VIPSImage(nil) { out in
            var opt = VIPSOption()

            if let nickname = nickname {
                opt.set("nickname", value: nickname)
            }
            opt.set("sigma", value: sigma)
            if let description = description {
                opt.set("description", value: description)
            }
            opt.set("min-ampl", value: min-ampl)
            if let separable = separable {
                opt.set("separable", value: separable)
            }
            if let precision = precision {
                opt.set("precision", value: precision)
            }
            opt.set("out", value: &out)

            try VIPSImage.call("gaussmat", options: &opt)
        }
    }

    /// make a text image
    public static func text(nickname: String? = nil, description: String? = nil, text: String, font: String? = nil, width: Int? = nil, height: Int? = nil, align: VipsAlign? = nil, justify: Bool? = nil, dpi: Int? = nil, spacing: Int? = nil, fontfile: String? = nil, rgba: Bool? = nil, wrap: VipsTextWrap? = nil) throws -> VIPSImage {
        return try VIPSImage(nil) { out in
            var opt = VIPSOption()

            if let nickname = nickname {
                opt.set("nickname", value: nickname)
            }
            if let description = description {
                opt.set("description", value: description)
            }
            opt.set("text", value: text)
            if let font = font {
                opt.set("font", value: font)
            }
            if let width = width {
                opt.set("width", value: width)
            }
            if let height = height {
                opt.set("height", value: height)
            }
            if let align = align {
                opt.set("align", value: align)
            }
            if let justify = justify {
                opt.set("justify", value: justify)
            }
            if let dpi = dpi {
                opt.set("dpi", value: dpi)
            }
            if let spacing = spacing {
                opt.set("spacing", value: spacing)
            }
            if let fontfile = fontfile {
                opt.set("fontfile", value: fontfile)
            }
            if let rgba = rgba {
                opt.set("rgba", value: rgba)
            }
            if let wrap = wrap {
                opt.set("wrap", value: wrap)
            }
            opt.set("out", value: &out)

            try VIPSImage.call("text", options: &opt)
        }
    }

}
